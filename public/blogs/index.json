{"blogs":[{"title":"References","path":"references","tags":["meta"],"timestamp":1698176900208,"content":"I'll make some references in my blogs to films, shows and books. I want people to be able to follow my references, so I'm going to try to source them, mostly, from a small body of popular material, which is noted here. Also note that I *really like* all the films, shows, and books that appear on this list (apart from maybe for Star Wars where I only really like Revenge of the Sith), and so it might be worth catching up with them if you get on with my work.   \n\n#### Films:\n\n- Star Wars Original and Prequel Trilogies\n- Harry Potter Series\n\n#### Shows: \n\n- The Walking Dead, Seasons 1-6 \n- Doctor Who (2005 version), Seasons 1-4\n- Hannibal\n\n#### Books: \n\n- Harry Potter again, although just watching the films should be enough\n- The Bible\n- The Silence of the Lambs\n"},{"title":"Terrible Deaths","path":"terrible-deaths","tags":["psychology"],"content":"Here are some of the worst ways to die:\n\n1. Drowning/suffocating\n2. Burning alive\n3. A harsh disease especially which affects your brain, e.g. rabies\n4. Being eaten alive, e.g. by a bear\n5. An ingenious human method, e.g. scaphism, crucifixion\n\nIf you're alone, and if your death comes without any sense or purpose, these are all generally much worse. If you're alienated from God or you have no religious conception of death, these are also all generally worse. Sometimes if your death does come with sense or purpose but the thing was *your fault*, they're worse -- because you could've avoided it and now you've squandered the rest of your life. And if you feel like you still have a lot to give and a lot of potential then these are also all generally worse. Sometimes it's better if (you think) the thing was your fault, because you feel like you deserve your punishement. If you've sinned really badly and you think that this is your just desert, you may be able to submit more to the experience. That's related to the fact that some of these are especially bad if you're trying to escape, or if you're given false hope, e.g. 1. is especially bad if you're struggling and panicking. That can happen before or during the event. If before, it can worsen the effect of anticpation/dread as each of your ideas about how you're going to get out of this prove frightfully insufficient.\n\nConsider that people change their lives so that they can be more ready to face incidents like this -- and it's no  wonder. Most of all ofc, we should be preparing to stop them from happening. E.g. 3. makes me want to study biology and to become a doctor. But the threat will always be there. So in the seat of comfort and luxury, do not be so quick to pass judgement especially upon people's 'irrational' beliefs and practices, which help them to cope with this awful state of affairs. Do not think you're so smart that you can see through to the origin of a behaviour and scoff. You have not yet been tested. \n\n","timestamp":1698526680544},{"title":"The Psychology of Stress","path":"psychology-of-stress","tags":["psychology"],"content":"*Disclaimer: I am not an expert on the subject matter discussed in this blog. If you are affected by stress, or by any of the issues discussed in the blog, and if you are seeking guidance, seek the guidance of a professional. The opinions expressed in this blog are based on the personal experience of the author and his casual observations, and should not be considered a substitute for the professional opinion of a psychologist, physiologist, clinician, etc., in whose domain the subject matter pertains.*\n\nwhat is stress? to me, psychologically, stress is like this. so there’s a bit of your conscious mind which I call *your focus*. this is the part of you that engages with things. that gives thoughts explicit reality, that can bring together and compare ideas, and that uses this process to control your voluntary behaviour. \n\nok, and then here’s something *you’re ignoring*. and: it’s vying for focus. and it says: what the fuck? you need to consider me — you need to *think* about me, account for me. and you think you can just ignore me? well, watch this. it says: \n\n“Hey, body”\n\n“Uh?”\n\n“One shot of stress please”\n\n“Uh-uh” \n\nAnd your dosed with stress, and that puts pressure on your focus. And that thing you’re ignoring: It’s saying: look, I have some power here, I can cause you stress, so come on, give me what I want, bring me in to your focus.\n\nFor example, let’s say that you’re playing a video game, and therein lies your focus. But you’re also a student, and you have an essay due tomorrow; and that’s what your ignoring. *Stress*. Another example, let’s say that I slept through my alarm because I was up late last night finishing that essay, and my focus is weak and maybe I want to lay in a bed a little longer. But I’ve also got to rush to get ready so I’m not late so I can hand the essay in by the morning deadline. *Stress again.*\n\nAnd that’s stress. But what do you *do* about it? Well, that’s up to you. Remember, the thing that you’re ignoring wants to be brought into focus, so you have options. \n\n(1) You can bring it in, you can think about it, act on the thing you’re ignoring. \n\nOr, (2) you can not do so. You keep it excluded. You keep ignoring. \n\nSo we have two categories of response, two approaches. We have the\n\n- In strategies. and the\n- Out strategies.\n\nNow, here’s what I think. Strategies can become habitual and it is not uncommon that one be able to be characterised by the tendency according to which one responds to stress. I’m gonna name some strategies. My point: thereby, I’m going to be naming *personalities*. You may be reminded of people you know. \n\nHOWEVER, it's worth noting that I do not consider the strategies that I will name below a complete accounting -- FAR from it, at least in principle. Also, it's possible that many strategies be present at one time in one person. Also, the descriptions I have given are approximations, they're not precise and they may be bundling together too many things at once. Also, it's possible that thinking of responding to stress in terms of these or similar strategies should come subsequent to the resolution of some physiological issue you have which will sabotage any attempt you make to approach the subject as a matter of pyschology. \n\nNow with all that said and acknowledged, let’s get into it and let's start by looking at some in strategies -- that’s ways of responding to stress where you allow the thing you’re ignoring to come into focus.\n\n### In Strategies\n\nAmong the in strategies we have a split between what I call the unsustainable ins and the sustainable ins. This has to do with whether or not your way of responding to stress causes you to stay vulnerable to it. If it’s unsustainable, you stay a stressed person. If it’s sustainable, there’s hope your stress can at least be reduced. \n\n#### Unsustainable ins\n\nThe first unsustainable in I call the **impatient in**. This sees the stress and says “Yes yes I see you. I’m up. I get it.” It’s … uh … impatient. You probably know someone who treats you this way personally. It’s like: whatever you say is obvious and not worth the person’s time and your desire to discuss the details be dammed. And you can tell that this is how they respond to their own ideas like things that they’re ignoring. The impatient in typically finds himself in a cycle of getting distracted and returning to the annoying thing like “Yep ok ok I know”. The annoying thing, the thing you’re ignoring, keeps having to reassert itself. (That cycle creates fatigue by the way.) The impatience involved is metaphorically like not being able to look somebody in the eyes. You know that if you’re too serious about the matter, uncomfortable implications will dawn upon you. So overall you acknowledge the stress and you service it minimally, but with distractions because you're probably chronically running into error because you’re not ready to deal with things full on. This is an 'unsustainable' in for that lack of willingness to get to the bottom of things.\n\nNext we have the **fearful/subservient in**. This in addresses the thing you’re ignoring like “Yes master. Sorry master. Please, tell me what to do.” And the thing you’re ignoring straightens its back and says “Right. Yes. Gimmie 10.” It’s unsustainable because things you’re ignoring learn that this is the way to get your attention. I think that you find the fearful/subservient in a lot in the context of shame cycles. i.e., the stress makes you feel bad, so you do something which gives you relief e.g. comfort eating, and then the stress makes you feel bad again for doing the thing that gave you relief — “Great, now we’re in an even deeper hole. Gimmie 20.” — then you seek relief again and so on. You also find it in a character of extreme prophylaxis, defence, and organisation, where the person always has to be ahead of a stressful situation and always has to take the steadier path. This can lead to e.g. an overworked employee who can't say no to additional assignments, perpetually trying to please superiors and to avoid confrontation. If shit hits the fan or if uncertainty gets too great, stress can be incredibly high for such a person. They also generally live in a state of tension -- a kind of low-level stress for making sure that they’re not ignoring anything, preparing themselves against high-level stress. \n\nThe **addicted in** on the other hand says to his stress: “Yeah! Nice, nice. Tell me more.” This is someone who uses stress to drive them forward. I’m thinking of finance bros, highly competitive lawyers, certain entrepreneurs. They want to feed and encourage the idea of things-that-they’re-ignoring so that they can dynamically juggle more stuff and so they can use the stress to fuel their creativity and action. It’s unsustainable because they want it to be! A risk in this case is one’s health and also not being able to think very slowly and reflectively. That can mean not questioning one's own premises and making moral errors which are possibly severe. \n\n#### Sustainable ins\n\nRecall that to be sustainable there’s something about your response to stress that should contribute towards the ridding of it. The response should implicitly or explicitly address the stress itself, letting your subconscious ideas know that they don’t need to use the body as an intermediary and that they can make their pleas directly to the conscious mind. So what have we got?\n\nThe **fascinated in** says to his stress: “Mmm, interesting. Yes. I will think about that.” Hannibal Lecter is a very successful fascinated in. He has an incredibly deep curiosity. He is able to view his ideas and actions, as well as those of others, in this kind of pristine abstract fashion, as mathematical forms, which are all playing together and bumping up against one another and about which there is no need at all to feel stress. Stress doesn’t feature. Everything is welcome on the field based on its own merits. And actions are taken simply because of the way things must be if one is to perpetuate the freedom of one's own mind. The fascinated in is very individualistic. There is a matter of habit involved in becoming a fascinated in, but there is also a philosophy/worldview, which is possibly antisocial and which requires contradicting a lot of conditioning and prejudice. \n\nThe **consoling in** addresses the stress origin essentially as if it were the mind's offspring, like it were a child, like “Hey, you don’t need to do that you know. We’re on the same team here. We’re all trying to do our part”. The important feature is that there's emphasised an attitude of tolerance. The consoling in is not necessarily super curious about ideas, like the fascinated in -- like he will let an idea into focus and consider its object-level consequences sufficiently so that he can live a fairly undisturbed life, but what he's actually super curious about is the need from which the idea arises. He (or should I more-appropriately say she) takes a very nurturing, motherly approach. The consoling in is also my perception of how a modern-day therapist would think about how to deal with stress. Why *I’m* not a consoling in is because I find that these people are not sufficiently exacting about passing moral judgment on cetain ideas/behaviours. Nevertheless I can imagine that this strategy is appropriate for a lot of use cases, especially when a person has root insecurities. \n\nIf the consoling in is a feminine kind of stress response, then the **unified in** is a masculine counterpart. The ideal of the king to me is a unified in. When a unified in feels stress, which is rare, he considers the source of stress in the context of his moral code. He says \"come foward, and state your case\". And he considers how he can act rationally on the basis of the case so stated. The unified in is at ease with himself. He has his missions, causes, purposes, and his ideas come together to service them. He is consistent with his own morals. There isn't a bunch of a tear within hiself between competing priorities or values. The unified in response can be thought of as downstream of developing an integrated psychology and philosophy in general, where that integration was the big initial lever that brought stress down to a minimal state. Although, it's worth noting that the unified in's psychology and philosophy is not necessarily as well-understood as e.g. a master fascinated in's, which makes the unified in slightly more vulnerable to certain extreme events or brilliant expositories of reason which shake up his worldview. \n\nLet’s check out some out strategies now.\n\n### Out Strategies\n\nOut strategies mean that you’re not allowed to let the thing you’re ignoring come into focus. Like in strategies, these can also be more or less sustainable (can lead to maintained or reduced stress), but generally ... they're all pretty unsustainable. Note though that out strategies are not necessarily bad, because a person might be legitimately not psychologically ready to face some thing they’re ignoring, and they might have to go through some preparation work beforehand; they might have to gradually stalk the thing and you can't just expect them to let it all in at once. \n\nAnyway, here are some out strategies:\n\nThe **ideology out** involves having some pretend excuse as to why the thing that you’re ignoring should stay ignored. The goal is to give some (possibly-sophisticated) lip service to the symbolic order that you hope to use to squash the thing that you're ignoring and to undermine its ability to produce stress. You don’t really want to confront the thing super seriously -- you don’t want to feel out all its implications. (Which is kind of like the impatient in although the impatient in is more obedient.) You basically have a defensive complex which is able to swat the thing that you’re ignoring whenever it arises and causes stress, as if it were a fly. Political ideologies can be good at providing such a complex. Ideologies related to a false sense of one's identity can work as well. i.e., I am such-and-such a person, so I don't need to think about X e.g. my weight, or so I don't really want Y e.g. a stable work environment, etc. In general the ideology out may be broken by being challenged in a supportive context or by an intense transformative experience. \n\nThe **obtuse out** feels stress but pretends not to recognise its original cause. This is essentially a form of denial. For example, imagine you've got someone who is stressed about financial difficulties but denies this so that they can continue excessive spending, gambling, not budgeting, etc. And what does that mean they deny it? How is that accomplished? Typically, you'll have such a person with moreover a secondary object onto which the stress origin can be projected. For example for the financial difficulties person he may lash out at people close to him. That projection by the way can be more or less willful and more or less blameworthy. Sometimes I reckon it's very purely subconcious and in a way that the person might be somewhat surprised to find that the true cause of their stress was something other. They might not *consciously* be pretending not to recognise the original cause of their stress. \n\nMoving on the **distracted out** means that you try to produce such a power of stimulation to the mind that there is not the requisite ambient quiet for the thing you’re ignoring to perk up and try to assert itself. For example, you seek out crowds/constant social occasions; you're on high-dopamine apps on your phone/devices all the time; lots of focus is spent on food, holidays, drinks, gossip; and there is possible drug abuse involved. Probably a distracted out can only sleep when they're very tired late into the night/early morning because they don't want to be alone with their own thoughts. The wave of stress waiting for a distracted out can be very daunting. Also, maybe I should've mentioned this earlier but the thing you're ignoring is not necessarily right, and for a lot of people this pent-up wave is plausibly too large and they're being too hard on themselves/setting unrealistic/mistaken standards. But of course you won't find that out until you're raised within an in strategy. So seek someone out like a good therapist who can raise you within an in strategy. \n\nThere's also finally the **black out**. This is arguably the most severe form of avoidance. It's where you do what you can to shut off the mind and disable its functioning, while still basically doing enough to stay alive with some dignity and entertainment. The idea is that there should no capacity according to which the thing you're ignoring can take shape. That incapacitation can be the result of drug and alcohol abuse. Or also it can be just avoiding anything or anyone that threatens to remind you of an issue. One variant is to shun such things/people and convince yourself that there's something wrong with them. Note that you might take the black out strategy if you're unimpressed by the trappings of being a distract out. I think there is a distrubtion where the distract out is more common among women and the black out more common among men.\n\n### Concluding Remarks\n\nI hardly want to end on that note so for anyone in a bad place please remember this from Rick's speech in the Walking Dead episode \"Too Far Gone\" (which I, if not the Govenor, bought into):\n\n> But we can still come back. We're not too far gone. We get to come back. I know, we all can change. \n\nSincerely, \n\nJustice\n\n","timestamp":1698609267141,"lastEdited":1699720388887},{"title":"Favourite Music","path":"favourite-music","tags":["culture"],"content":"All of my favourite music has a story associated with it. Not from my life, but a story from stuff I've watched: a film, programme, TikTok, YouTube video, etc. I have some music that I associate with books I've read as well. E.g. while I was reading the 'A Song of Ice and Fire' books, I played some ambient music which now holds an emotional template for me that I can load in whenever I listen to it. Also, it's happenstance that the stories aren't from my life, not a principled distinction. It's typical to develop favourite songs based on experiences you've had, which are part of a story too.\n\nMusic and stories are VERY complementary media. Great stories are supplemented with music; and great music is supplemented with a story. Well actually I might be expressing a predujice there. But at least for me, considering the latter, I want to be able to identify music in some kind of embodied form. I want to be able to relate it to a character. It's difficult for me to relate to or understand it otherwise. I mean for instance, a lot of music lyrics don't make sense. You can't piece them together logically.\n\nBelow I'll list some of my favourite songs at the moment. I've chosen songs moreover that have been my favourite songs for a long time, after many listens, which is a good test that they're really meaningful. It's kind of like someone who you'd have a fling with vs someone you'd have a relationship with long-term. \n\nPlease don't listen to any of these unless in the course of watching the thing that I say they're from. Here they are:\n\n- *Civillian* by Wye Oak. This is from the Walking Dead Season 2. If you look up the song you'll find the scene in which it's played. I can't express what it's about exactly but it has something to do with the character of Shane, his isolation and his ... circumstance. I literally don't know how to put it into words; and it would be misleading/offensive for me to try too early.    \n- *O Children* by Nick Cave And The Bad Seeds. This is from Harry Potter and the Deathly Hallows Part 1. It's from when Harry and Hermione dance in the tent. To me it's about Harry reminding Hermione that he feels things too, that he's there, that he sees her, that they can choose to be graceful and joyous in the face of challenge and uncertainty, and probably a bunch of other stuff besides. \n- *A Song of Captivity and Freedom* by Murray Gold. This is from Doctor Who Seaon 4's \"Planet of the Ood\". And I'm simply not worthy of addressing it. It's too powerful. It's about the way the Ood feel as slaves and once freed. I advise that you see and you hear it for yourself.   \n\nIt's a shame that music videos are so bad in general. That is an attempt to put a story to one's song or more generally to concretise the vibe. One thing which you could do as a musician wanting to market your work is to (hire someone to) make edits for TikToks/YouTube shorts/whatever happens on Instagram/etc. that go well with it. There is actually a business model there for whoever wants it. (Team of editors. Deal gets made with music producers. Etc.) If you're cutting up a version of a story that people already know, or if you have a short that people can easily understand, attaching your song to it can go a long way. One of my most recent favourite songs is from an edit about Anakin Skywalker. ","timestamp":1698535432115,"lastEdited":1698611529204},{"title":"Code Masters","path":"code-masters","tags":["code"],"content":"We should have master-apprentice programmes for software engineers. *Master-apprentice programmes* are part-structured part-unstructured programmes of one-on-one guidance, discussion, and debate between a 'master' and an 'apprentice' developer. It's like pair programming, but where a lot more explicit focus is given to principles/ideas/meta-issues, rather than to the particularities of any specific task.[^1] \n\n[^1]: I think there's still a lot of low-hanging fruit re coding principles and I recently started a series about those we currently live by unspoken (see [Visual Coding Principles](/blog/visual-coding-principles)). I believe that focus on these principles is high impact, and also in general associatedly that there is also overvalued among developers incidental knowledge about particular technologies. \n\nWhat would such a programme accomplish? Mainly, it would accomplish the creation of more code masters. A code master is a maturation of the idea of a 10x developer. Code masters produce a much greater output than ordinary developers, and also, they do so at a greater quality. That means that they count for many such developers, and in some ways for more than any number of them. A code master is an artist whose abilites inspire awe among the non-masters.\n\nWhy do master-apprentice programmes work? Several reasons:[^2]\n\n[^2]: Some stipulations are implicit herein in the matter of the master choosing their apprentice wisely and vice versa.\n\n- The ability for the master to study the apprentice and to recognise patterns in their mistakes. This enables the master to share especially high-leverage, tailored insights. \n- The ability for an apprentice to be insistently curious, to keep asking why questions, and for the master to follow their individual train of thought. \n- The formation of bonds of trust. The apprentice and master can grow to trust one another, and therefore feel safe to share radical or otherwise-fraught ideas. \n- The intimacy of comparison between the apprentice and the master. The comparison between apprentice and master can foster a competitve, aspirational instinct in the apprentice (which can be extremely powerful); and in the master, it can foster his desire to prove himself a master, and thus to make his premises more robust (which can also be extremely powerful). \n\nNote that my sense is that code masters in our world are very rare. Part of that is because they don't take on apprentices. If as a rule a master takes on two apprentices, and raises them to mastery, let's say over the course of a few years, then we would soon have a lot more masters in the world. However, since masters are so rare, we should begin our master-apprentice programmes more imperfectly -- between what we more comfortably refer to as simply 'senior' and 'junior' developers. The environment of much idea-sharing should occasionally mean that therby are produced true code masters. Those masters can then gradually be introduced as the more predominant leaders of the programmes. And once there are a lot of masters, perhaps we can also be less shy about identifying them. \n\n\n\n","timestamp":1698672032969},{"title":"Code Directors","path":"code-directors","tags":["code"],"content":"A code director is akin to a movie director. He oversees a codebase, and he calls the shots. Here's a summary of his role.\n\n- He 'owns' the codebase. It's 'his'.\n- He answers to the overall quality of the codebase. If something's gone rotten, he is responsible.\n- He reviews all inputs. E.g. he reviews every ticket.\n- He reviews all outputs. E.g. he reviews every pull request.\n- He inputs. Given an understanding of the needs of the codebase, the business trusts him to create and to allocate work.\n- He outputs. He contributes to the codebase.\n\n### Why Code Directors?\n\nWhat's that all for? Why would we want a code director? \n\nI'll build up to it.\n\n#### Background\n\nWithin a team, collective decision-making is hard. A collective lacks conviction. Often, decisions don't get made, and even discussions about an issue are avoided. If decisions do get made, often an irrational process had to intervene such as voting. So the team fails to make much progress. In order to make progress, the team recognises that it must develop some means of individualising decision-making in the majority of cases.\n\nThe prevalent means by which this is done in a software development context is by dividing up responsibilities amongst the team and by giving team members decision-making power over their own individual components e.g. over their own tickets. They form a so-called 'agile team'.\n\n#### Problems\n\nI suggest that there are some problems with the existing model of an agile team. And that at the prompting of which we should upgrade the agile team to a *directed agile team*, by adding a code director role. \n\nConsider a couple of facts:\n\n1. By giving everyone decision-making power, everyone, somewhere, makes their own decisions about the code, and their own standards apply.[^1]\n\n2. By dividing out responsibilities, no one is responsible for the codebase entire.\n\n[^1]: There are a vast many subtleties about the way people code which are impossible to normalise automatically and may yet lack any kind of recognition in language.\n\nWhence we have the following problems:\n\n1. From Fact (1), since decisions, as a matter of their composing principles, will vary between developers, this will lead to a measure of incoherence, inconsistency and general confusion across the codebase.\n\n2. From Fact (2), developers who are not responsible for the entire codebase will often focus on climbing their own local optimum at the expense of the global one. I.e., they will be biased in favour of one metric, which is relevant to their work, over some ignored other.\n\n3. From Fact (1) and Fact (2): If a lower-skill developer has decision-making power, and no other developer has the ownership sufficient to bother overruling their work, lower-standard decisions can enter into canon.\n\nNow, having a code director partially undermines Fact (1), and undermines Fact (2) by definition, so let's think about the positive impact of introducing a code director re solving these problems.\n\nFor Problem (1), we get a partial solution in that everything must pass through the code directors mind: there is a single party, the director, that is always present at least to review every piece of work. We have a consistent normalising factor which is the scrutiny of whatever the director's standards are. His ways of working are the effective default. We're still assuming that the brainpower of a group effort is necessary, so since the director is plausibly not completely reinventing each developer's work upon submission, some inconsistent standards will still slip through. But this provides us with a new defence.\n\nFor Problem (2), we theoretically get a complete solution, assuming that the code director does his job. There is pressure on him to consider the state of the codebase as a whole. So it will not do for him to be disrespecting metrics that happen to be out-of-focus for some specific piece of work.\n\nFor Problem (3), we get somewhat of a soution in that the code director has to answer for any bad code that gets through him. He has an incentive to do throughgoing quality control. And also since the code director should generally be the best developer in a team, there should be applied thereby the best quality control that the team could muster.\n\nSo having a code director would help solve some important problems with existing agile teams. \n\n#### More accounting\n\nTo solve problems (1)-(3), I used the fact that the code director owns and is responsible for the codebase, and the fact that he reviews all outputs. But what of the other named aspects of his role? \n\nAll should considered complementary to this core idea of 'ownership'. Let's briefly expand upon each. \n\n- *He reviews all inputs. E.g. he reviews every ticket.*\n\nThe code director is basically the Product Owner's go-to man. Why? Because he understands the codebase the best; he's best able to represent the interests of developers; and he understands what's possible and practical for the team. \n\n- *He inputs. Given an understanding of the needs of the codebase, the business trusts him to create and to allocate work.*\n\nAgain this is an expectation following that the code director understands the codebase the best. E.g. he will know when it's appropriate to clear certain technical debt. \n\n- *He outputs. He contributes to the codebase.*\n\nWhen the code director does things himself, he finds out a lot through trial and error about what works for the code and what doesn't, and that can save him from \"Can't we just ...\"s when evaluating other people's work. Also, evidence of the code director's skillful contributions can help teammates view him as more of a leader since he \"models advancement of the cause\" (see my [blog](/blog/leadership) on leadership). They at least can respect him more and might be less bristly about his offering opinions. \n\n### Successful Code Directors\n\nI'll list a few things generically required for a code director to be successful:\n\n- A code director should a code master (see my [blog](/blog/code-masters) re code masters). That means he should be a very knowledgable and competent developer. If he's not, he can become a big bottleneck for (good) work getting through to production. \n\n- A code director should be a good communicator. This is so his teammates want to work with him, can come to believe in his principles, and so that the work they do is done with care in consequence.\n\n- A code director should not be easily cowed. He should be intolerant of *bad product*. He should always enforce his high standards, not allowing himself to get pressured into something inadequate.\n\n- A code director should be prepared for long-term commitment to a codebase! \n\n### A Transitonal Mode\n\nI'm going to wrap things up now. Here's a closing thought. For modern software development, on large-scale projects, a directed agile team is in my mind the proper next increment moving on from an agile team. But that isn't my final vision for the future. I think of the code director as a prelude to the developer who leads even large-scale projects completely on his lonesome! -- a single code master with formiddable mind, who uses some AI buddy to account for incidental knowledge. Developer and AI like Jedi and droid. This one-developer approach is part of my other vision of raising more code masters through master-apprentice programmes (again see my recent [blog](/blog/code-masters) about this).\n","timestamp":1698779140042},{"title":"Visual Coding Principles","path":"visual-coding-principles","tags":["code"],"content":"This blog is the first of (possibly) a series about coding principles which _I don't see taught_, but which are _necessary to understand if you want to be a Jedi master_. \n\nI claim that mastery often involves being able to wring principles from that which others are content to leave unspoken -- as matters of intuition, or as matters of taste. So I want to use this series to try to push out the boundary of the logos, to further articulate and control. When something doesn't feel quite right -- when perhaps you shift things about and all clicks into place -- we must consider, explicitly: _What was that?_ What difference made the difference? What was God's design?\n\nAllow me before we start to pay the toll to modesty: I am not a Jedi master. I have worked as a web developer with merely intermediate skill, and there're a lot of things I don't know. Nevertheless, it is a deep compulsion within my person that draws me to these topics, and ergo I have developed my piece, which I'm sharing with you today. \n\nToday we focus on unspoken coding principles, and specifically those principles *visual*.\n\n### The Task\n\nLet's say that we're given the following task.\n\n1. Write a Javascript function `getClockTime` which returns the hours and minutes that would appear on a digital clock, which are associated with a specific `Date` instance, formatted as a string.\n2. For several different implementations of such a function, evaluate their visual-based merits and demerits, and deduce any attendant principles.\n\nTo clarify number 1., our goal is basically to re-implement:\n\n```javascript\ndate.toLocaleTimeString('en-GB', {\n  hour: '2-digit',\n  minute: '2-digit',\n});\n```\n\nwhere e.g.:\n\n```javascript\nconst date = new Date('1995-12-25T23:15:30'); // then\ngetClockTime(date); // returns 23:15\n```\n\nHopefully you get the idea. I know it's a bit of a strange example, but it's true to a project that I was working on where I didn't know that the `toLocaleTimeString` method existed, and where I recognised that I was thinking about the things which make the subject of this blog. So we're gonna go with it.\n\n### Implementation 1\n\nFirst for `getClockTime`, I offer Implementation 1:\n\n```javascript\nconst getClockTime = (date) => {\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  if (hours < 10) {\n    hours = `0${hours}`;\n  }\n  if (minutes < 10) {\n    minutes = `0${minutes}`;\n  }\n  return `${hours}:${minutes}`;\n};\n```\n\nNote that all of our implementations will work in essentially this same way: we get the hours and miutes from methods on the date object; consider whether we need to prepend 0s; and then join them up with a colon. The different implementations will be interesting to us principally because they look different.\n\nHow does this first implementation look? I claim: _wrong_. I note a couple of problems, and the first is that we have violated a principle, which I call _The Principle of Line Waves_.\n\n### The Principle of Line Waves\n\nNotice the positions, which I've marked, of the ends of the lines of this function:\n\n```javascript\nconst getClockTime = (date) => {\n  let hours = date.getHours(); /\n  let minutes = date.getMinutes(); /\n  if (hours < 10) { /\n    hours = `0${hours}`; /\n  } /\n  if (minutes < 10) { /\n    minutes = `0${minutes}`; /\n  } /\n  return `${hours}:${minutes}`; /\n};\n```\n\nAt a glance, you plausibly perceive as a developer that there is made out a pattern such as:\n\nThe 'Two Bumps' pattern:\n\n```javascript\nconst getClockTime = (date) => {\n  let hours = date.getHours();    \\\n  let minutes = date.getMinutes();  |\n  if (hours < 10) {               /\n    hours = `0${hours}`;       /\n  }                          |\n  if (minutes < 10) {         \\\n    minutes = `0${minutes}`;    \\\n  }                               |\n  return `${hours}:${minutes}`;  /\n};\n```\n\nOr the 'Comeback' Pattern:\n\n```javascript\nconst getClockTime = (date) => {\n  let hours = date.getHours();        /\n  let minutes = date.getMinutes();  /\n  if (hours < 10) {               /\n    hours = `0${hours}`;        /\n  }                           /\n  if (minutes < 10) {         \\\n    minutes = `0${minutes}`;    \\\n  }                               \\\n  return `${hours}:${minutes}`;     \\\n};\n```\n\nMyself, I see 'Two Bumps'.\n\nSo what's my point? I claim that both of these patterns are significant. Both of the patterns _affect_ you. (Especially if your someone for whom the function is basic enough that you have the mental space to allow the patterns to affect you; and especially if right now you're not focused on disagreeing with me.) Likely too, by the way, the affect is subconcious.\n\nWhat is the meaning of that affect? It's _something_ -- the patterns have connotations. For instance, 'Two Bumps' suggests to me that there are somehow two pushes of work in the function. There are two teams, somehow reasonably, logically grouped together, which accomplish their own piece of work. And also the continuity of the bumps suggests that the teams somehow imply one another or are complementary. This is often well-fitted to if-else statments like this example from the code for (the script for removing blogs from) this blog:\n\n```javascript\nif (!blogs.some(matchesTitle)) {                  \\\n  console.log(`\\nBlog '${title}' was not found.`); |\n  process.exit(1);                                /\n} else {                                         \\\n  writeBlogs(blogs.filter(negator(matchesTitle))); |\n  cleanupImages(title);                            /\n  console.log(`\\nBlog '${title}' removed.`);     /\n}                                              /\n;\n```\n\nThe 'Comeback' pattern on the other hand suggests to me that the function's code is somehow strong, and then settles down a bit, and then gets strong again -- like that there is something interesting/significant/involved/difficult/unique followed by less so followed by more so again. Here is an example from a separate project:\n\n```javascript\nconst setupFormSubmission = (inputNames, endpoint) => {\n  const form = getForm();\n  const handleSubmit = async (submitEvent) => {   /\n    submitEvent.preventDefault();                /\n    const formData = inputNames.reduce(         /\n      (formData, inputName) => ({              /\n        ...formData,                          /\n        [inputName]: form[inputName].value,  /\n      }),                                   /\n      {}                                   /\n    );                                     |\n    await postData(formData, endpoint);      \\\n  };                                            \\\n  form.addEventListener(\"submit\", handleSubmit);  \\\n};\n```\n\n(I have strained the applicability of the pattern slightly here for the sake of not having to make up an example.) In this case it makes sense that the-idea-that-we-are-defining-a-form-submission-handler, as well as the-attachment-of-that-handler-to-the-form would be the 'loudest' points of `setupFormSubmission`.\n\nSo what's happened here is that I have taken the patterns made out by our function's line lengths and I have inferred something about the function's operation -- that it has two pushes of work, has loud-quiet-loud logic, etc.\n\nNow I elevate this idea to a general principle. In general, the patterns formed about the ends of the lines of a function, which I call the _line waves_, (may) have connotations which impact your perception of the operation of the function. Also, that impact can be more or less accurate to the real operation of the function. When it _is_ accurate to the real operation of the function, I say that the function is _linusoidal_; and else, it's not. _The Principle of Line Waves_ is that functions should be linusoidal. By the way, you can replace function with module or class throughout.\n\nImplementation 1 is not linusoidal. I have suggested that there is a meaningful impact of its line waves. And it is an easy exercise to explain that that impact is misleading. E.g. For 'Two Bumps', I expect minimally to see correspondent two logical groupings of work. Here is one such:\n\n```javascript\nlet hours = date.getHours();    \\\nlet minutes = date.getMinutes(); |\nif (hours < 10) {              /\n  hours = `0${hours}`;      /\n}                       /\n```\n\nWhich is no such. \n\nHow do we make the function linusoidal? One simple technique is to 'break the wave' by adding newlines as below:\n\n```javascript\nconst getClockTime = (date) => {\n  let hours = date.getHours();     \\\n  let minutes = date.getMinutes();  \\\n\n  if (hours < 10) {       \\\n    hours = `0${hours}`;   \\\n  }                         \\\n  if (minutes < 10) {        \\\n    minutes = `0${minutes}`;  \\\n  }\n\n  return `${hours}:${minutes}`; \\\n};\n```\n\nNotice then how that instead of 'Two Bumps', or the 'Comeback', we have mainly just those two distinct slopes which suggest _bit of logic followed by separate bit of logic_, which at least is accurate and I think this makes the function look a lot better. Really. \n\nSo that is the principle of line waves and our simple way here of addressing it. But then of course that leaves still the matter of the second problem, evident with or without newlines -- since recall that I noted that there were a couple of problems with Implementation 1 -- and the second is that we have violated another principle, this time which I call _The Principle of Visual Balance_.\n\n### The Principle of Visual Balance\n\nNotice the chunkiness of this middle section for the if statements:\n\n```javascript\nif (hours < 10) {\n  hours = `0${hours}`;\n}\nif (minutes < 10) {\n  minutes = `0${minutes}`;\n}\n```\n\nIt takes up six lines. For this function, that is a fair deal of space. And thereby, it puts significant weight — I argue, too much weight — on the matter of prefixing the zeros.\n\nConsider `getClockTime`’s perspective. From its perspective, a lot of the 'important work' should’ve already been done once we had gotten the actual relevant number of hours and minutes, from the date object, for the time. To dedicate a bunch of its lines to this minor other thing, re prefixing the zeros -- it's a distortion. When I look at this function and I gauge its key operations, its key work, my attention is drawn to this overlarge middle portion. And that misrepresents the abstract story about `getClockTime`'s responsibilities.\n\nTo come at this with the help of an alternative context, one place for which similar considerations frequently arise is in the rendering logic in the return statement of a React component. \n\nFor the page that you're currently reading this on, which is written using React, the distinguishing logic resides in a component called `BlogPage`. When I was adding the ability for me to edit blogs, I added the ability also for the user to see a 'last edited' date. That made the return statement of `BlogPage` look like this:\n\n```javascript\nreturn blog ? (\n  <div className={styles.blogContainer}>\n    <article className={styles.blog}>\n      <h1 className={styles.blogTitle}>{blog.title}</h1>\n      <span className={styles.blogDate}>\n        <small>{getCalendarDate(blog.timestamp)}</small>\n        {blog.lastEdited && (\n          <small>\n            (<em>Last edited:</em> {getCalendarDate(blog.lastEdited)})\n          </small>\n        )}\n      </span>\n      <hr />\n      <main>\n        <Markdown>{blog.content}</Markdown>\n      </main>\n    </article>\n  </div>\n) : null;\n```\n\nWith that option of an additional 'last edited' date, suddenly a bunch of space in the return statment is afforded to the logic of date-gathering. At a glance, one can barely even notice the `h1` for the blog's title. And thus introduces a problem of a misdistribution of emphasis.\n\nI fixed this problem by introducing a separate component, `BlogDate`, to encapsulate the date-gathering logic, changing the return statment like so:\n\n```javascript\nreturn blog ? (\n  <div className={styles.blogContainer}>\n    <article className={styles.blog}>\n      <h1 className={styles.blogTitle}>{blog.title}</h1>\n      <BlogDate blog={blog} />\n      <hr />\n      <main>\n        <Markdown>{blog.content}</Markdown>\n      </main>\n    </article>\n  </div>\n) : null;\n```\n\nWhich is obviously much neater and reads much more sensibly. \n\nIn both of the examined cases then, what is the underlying, regulating principle? We should be able to generalise. \n\nWell, in general, the proportion of space that a piece of code occupies in its containing function (which combines line length, line number, and negative space) affects your perception of the code’s importance to that function -- of the importance of understanding that code in order that you might understand the function, and the function's responsibilities. I say that when this effect of *perceived* importance is accurate to the *true* importance, then the function is _visually balanced_; and else it’s not. _The Principle of Visual Balance_ is that functions should be visually balanced. (Again you can replace module or class.)\n\nReturning to our case of Implementation 1, I am claiming that we have violated this principle. To respect it, one thing that we can do, which is possible in Javascript, is to get rid of those braces for the if statements, reducing a hefty six lines into a more modest two:\n\n```javascript\nconst getClockTime = (date) => {\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n\n  if (hours < 10) hours = `0${hours}`;\n  if (minutes < 10) minutes = `0${minutes}`;\n\n  return `${hours}:${minutes}`;\n};\n```\n\nAnd since the context has changed for the line waves, I would bring this together like so to obtain:\n\n```javascript\nconst getClockTime = (date) => {\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  if (hours < 10) hours = `0${hours}`;\n  if (minutes < 10) minutes = `0${minutes}`;\n  return `${hours}:${minutes}`;\n};\n```\n\nAnd, ah, that's better. Notice that the matter of prefixing the zeros is much more snappy -- `getClockTime` is more appropriately impatient with it. And we achieve (at least a greater) visual balance.\n\nAlso, note with this development that the ends of the lines of the function now form a new pattern, which is worth evaluating, and which also I supsect is quite common, and which I call the 'Reset' pattern:\n\n```javascript\nconst getClockTime = (date) => {\n  let hours = date.getHours();        \\\n  let minutes = date.getMinutes();       \\\n  if (hours < 10) hours = `0${hours}`;      \\\n  if (minutes < 10) minutes = `0${minutes}`;  |\n  return `${hours}:${minutes}`;              /\n};\n```\n\nThe 'Reset' pattern happens whenever you have a slope in a function's body followed by a shorter return statement. What this suggests is like that there was a chunk of work building up to the return statement, and which statement, short and blunt, was then able to draw everything together and to tie it off succintly with a bow. Moreover then this suggests to me that the function should not have any side effects, or any leakages or suchlike, because it's as if everything was cleaned up at the return. \n\nSince those suggested meanings are accurate to the context of `getClockTime`, the function remains linusoidal. And with visual balance, the two previously-noted problems are thus no more for Implemenation 1. So is that all?\n\n### Pivoting into Implementation 2\n\nInstead of simply presenting Implementation 2, I will motivate it. For the sake at least of curiosity, here are some problems that yet remain with Implementation 1, which do not have a visual basis, but which in the course of an ordinary developer's thought process may suggest that there is a better path:\n\n1. You should try to avoid reassigning variables where the reassignment so causes the meaning of the variable to become ambiguous. In our case, the hours/minutes variable holds an integer, and subsequently, confusingly, is reassigned to a string.\n2. These two lines:\n\n  ```javascript\n  if (hours < 10) hours = `0${hours}`;\n  if (minutes < 10) minutes = `0${minutes}`;\n  ```\n\n  have the same logic, and it would be nice to know -- like, OK, but to what abstraction does that logic correspond? Because that is the abstraction that `getClockTime` would preferably deal with. Contrast with the first two lines:\n\n  ```javascript\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  ```\n\n  Here there is encapsulated some relevant logic, and `getClockTime` is just exposed this interface of `getHours` or `getMinutes`. `getClockTime` is responsible for a certain 'level of the converation', and the first two lines just set the tone. We want more appropriately to conform to it in the subsequent lines. \n  \n3. Sometimes there is a linting rule in the codebase you're working in about if statements always having braces. In that case the implementation that we have without them would not be possible. It might seem a bit anti-climactic for me to point this out but I thought that it was worth doing so for the sake of the general point that occassionally one has to deal with annoying incidental facts like this.\n\nSo with a mind to solving all three of those problems, let us introduce Implementation 2.\n\n### Implementation 2\n\n```javascript\nconst getClockTime = (date) => {\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const clockHours = getClockDigits(hours);\n  const clockMinutes = getClockDigits(minutes);\n  return `${clockHours}:${clockMinutes}`;\n};\n\nconst getClockDigits = (time) => {\n  return `${erasable('0', time >= 10)}${time}`;\n};\n```\n\nWhat's changed here? Importantly, Implementation 2 makes use of a new function, `getClockDigits`, which does the work of the earlier if statements. I've also been a bit cheeky and I've introduced a third function, which I’m assuming that you have access to by another means, which `getClockDigits` uses, called `erasable`. Now the reason that I thought it was excusable for me to include this was because I thought it might be a good, instructive aside for me to outline the reason why I'd want to. \n\nNote that `erasable` works like this: \n\n```javascript\nconst erasable = (string, erasureCondition) => {\n  return erasureCondition ? '' : string;\n}\n```\n\nThe reason that I'd want to include it is because I think that it’s good to have little functions like this that give-you-a-name-for-the-thing and which declare your intentions. For `erasable` in particular, I also like the way that it puts emphasis on possible erasure of a substantial string, instead of say addition of an empty string. I also like the way that it gives you a visual metaphor. \n\nAnyway, we’re not super concerned about how `getClockDigits` works because we’re focused on `getClockTime`. We might be more concerned about it if we were considering visual principles at the module level. So let's consider `getClockTime`.\n\n#### Line waves and visual balance \n\nWe've identified a couple of principles already. So how does Implementation 2 square up?\n\nFor line waves, we have a slightly less pronounced 'Reset' pattern.\n\n```javascript\nconst getClockTime = (date) => {\n  const hours = date.getHours();           \\\n  const minutes = date.getMinutes();         \\\n  const clockHours = getClockDigits(hours);    \\\n  const clockMinutes = getClockDigits(minutes);  \\\n  return `${clockHours}:${clockMinutes}`;       /\n};\n```\n\nWhich is still adequate. And so the function is still linusoidal. \n\nFor visual balance, we have a similar core distribution of space. And so the function is still visually balanced. \n\n(Actually, I'd argue all the more so. Notice that, despite the fact that `getClockDigits` only, as a matter of fact, involves possibly prefixing zeros, the higher stature of the abstraction in `getClockTime` means that lines 3 and 4 have done more to earn their place.)\n\n### The Mosaic Principle\n\nNow we're going to use Implementation 2 to identify a third principle -- not from the principle's violation, but from the appearance of having conformed to it. Implementation 2 conforms to a third principle, which I call *The Mosaic Principle*. \n \nNote: This principle will be somewhat annoying to demonstrate. I have accepted certain formatting limitations for this blog, and there are issues with me choosing now to include images, and so for the matters discussed the reader will either have to use their imagination or to paste the relevant code into some editor they have on hand.\n\nHere's the background. \n\nNotice that Implementation 2 involves a predominace of variable declarations on the left hand side. On the right hand side, a predominance of function calls. Your editor will colour each of these in a consistent fashion. In my editor, the left hand side is predominantly blue, and the right a light yellowish/beige-ish colour. It looks consistent and orderly, which feels soothing and safe. Compare that to Implementation 1. The admixture of variable declarations and function calls with in this case if conditions, numeric literals, and a sprinkling more of template strings, makes for a greater disorder of colours and makes one thereby more uneasy. \n\nIt's so that Implementation 1 lies especially in accordance with a principle which I call *The Mosaic Principle*. The idea is that the colours that your editor uses to highlight your code within a function form a more or less visually pleasing mosaic. I say that when the colours _are_ visually pleasing, then the function is *mosaical*; else, it’s not. *The Mosaic Principle* is that functions should mosaical (relative to some benchmark of syntax highlighting). \n\nNow, you will notice that I am introducing this principle with a little less motivation than the others. I will say briefly that I consider it to be the lowest priority of those mentioned. Obviously one thing to note is that, since it’s probably not a good idea to standardise syntax highlighting across say your team, there is going to be some variation in the relevant colours painting a function's code between developers, and so the principle bears only or mainly upon projects undertaken by a single individual. Another thing to note is that I’ve stated the principle in terms of what’s \"visually pleasing\", but it’s unclear to me what the role of that feeling of visual pleasure is. What information am I getting from the function's mosaic? Is that useful? Misleading? Is a good mosaic proxying for something else which should more justly be the focus? I'm not entirely sure. \n\n### Pivoting into Implementation 3\n\nRegardless, we can now name three principles: of line waves, visual balance, and the mosaic principle. Now we will move on to a third implementation of `getClockTime`, which will allow us to study the principles further, and to see what else becomes of a fresh face. What cause is there to move on this time? \n\nOne thing which you might be alert to in Implementation 2 (here it is again for a reminder)\n\n```javascript \nconst getClockTime = (date) => {\n  const hours = date.getHours();           \n  const minutes = date.getMinutes();         \n  const clockHours = getClockDigits(hours);    \n  const clockMinutes = getClockDigits(minutes);  \n  return `${clockHours}:${clockMinutes}`;       \n};\n```\n\nis this repetition of \"hours\", \"minutes\", \"clockHours\", \"clockMinutes\", and especially if we were going to add seconds to that list, you might wonder simply why we were choring ourselves with so much work. And thus here is a means to get rid of it:\n\n### Implemetation 3\n\n```javascript\nconst getClockTime = (date) => {\n  const time = [date.getHours(), date.getMinutes()];\n  const clock = time.map(getClockDigits); \n  return clock.join(':');\n};\n\nconst getClockDigits = (unit) => {\n  return `${erasable('0', unit >= 10)}${unit}`;\n};\n```\n\nSo, again, we have something which works in essentially the same way, the treatment on this occasion using an array. And what of the principles?\n\n#### Line waves and visual balance and mosaicality\n\nNotice that Implementation 3 is nicely linusoidal:\n\n```javascript\nconst getClockTime = (date) => {\n  const time = [date.getHours(), date.getMinutes()]; /\n  const clock = time.map(getClockDigits);         /\n  return clock.join(':');                     /\n};\n```\n\nIt follows a 'Convergent' or 'Funnel' pattern; which in general suggests getting closer and closer to the return statement with each line building upon the previous; it suggests progressively 'separating the wheat from the chaff'; and we don’t take any sort of tangents or detours. Since that attests truly to our implementation (we get the time, and from the time we get the clock, and from the clock we get the clockTime), we have the principle of line waves. \n\nWe also apparently keep to the principle of visual balance. We have three distinguishable, coherent pieces of work, and to each their own line. So no problems there.\n\nAnd mosaic-wise, I think the function looks quite nice. All in all, valued citizen. \n\n#### Miscellaneous\n\nI want also to take this chance to make a point that, beyond general principles, sometimes there are miscellaneous, 'one-time' visual factors that come into play, and which I thought were evident in the present case. I thought that it was funny because the square brackets of an array actually look a bit like they are enclosing a real digital clock. E.g.\n\n```javascript\nconst clock = time.map(getClockDigits); // is [HH, MM]\n```\n\nSo it's worth considering that there might occassionally be something unique about the context of a function which makes one implementation visually preferrable to another.\n\n### Conclusion\n\nTrying to bring this thing to a close now, let us have a brief concluding chat. Because I figure that some of the audience are sitting very sceptical. \n\nNow, recall that I said that these principles are necessary to understand, *not* necessary to follow. For example, since I named for myself the principle of line waves, I have been able to recognise how much refactoring work I was implicitly dedicating to it, and I have been able with this greater knowledge to consider, from a more rationally-available perspective, whether or not such refactoring work is worthwhile -- and sometimes it's really not. What I'm trying to say is that if you refuse to know the principles, then it's only likely that you'll blindly be affected by them -- well, that is, presuming generously that you would have any taste about the matter in the first place. \n\nBut, that said, I'm not just putting out a warning. *Hear these principles, that you may do better to ignore them.* No. I don't consider visual principles beneath oneself. You should use them as a tool. Use them to improve your experience and your understanding as a developer. If heeding the visual aspects of your code does not significantly negatively impact some key alternative metric of your application, that is otherwise necessary to consider, such as performance, then why not?\n\nIf you’re annoyed about the prospect of having ever to think about them, if you're very concerned about wasting time and energy on the topic -- which is valid, you know, I get very concerned about that -- one suggestion is to think about the principles a lot for a concentrated period, similar to what we’re doing now, with many and different examples, and to use that period to drill those principles into your subconscious. Then for your future projects, you won't really have to think about the principles and your internal ChatGPT will integrate it all in for you.  \n\nAlso, to put some more background on the matter, it is my sense that readability, which these principles (notably the principle of line waves and of visual balance) affect, is a really big limiting factor for making stand-out, especially good web applications nowadays. I prophesy that the one who seriously innovates with his code on this frontier will change the game and will secure its riches. And let me emphasise a connotation here which readability has come to encompass: it's also about read-willingness. It's a vision of a codebase that you love, that makes sense, that feels good, that feels natural, that you want to work with; it’s a vision of happy developers. \n\nAnyway, I hope that you’ve found all this business useful. And that's my piece.\n\nSincerely,\n\nJustice\n","timestamp":1698359860534,"lastEdited":1698787164649},{"title":"Naming the Shadow","path":"naming-the-shadow","tags":["psychology"],"content":"_Content warning: We're in the restricted section of the Hogwart's library. By continuing to read this blog, you agree that you are over the age of 18._\n\n_Acknowledgement: I am in a similar tradition to Jordan Peterson re the shadow. I wouldn’t be thinking about the sahdow if it wasn’t for him._\n\n_Disclaimer: I am not an expert on safely managing any kind of recognition or integration of shadow. Please proceed with caution._\n\nThe darker side of yours and of others' psychology -- the 'shadow' à la Carl Jung -- is a part of reality. Eventually, if you’re going to be psychologically mature, you’re going to have to contend with it.\n\nContending with the shadow involves, principally, _naming_ its aspects. I.e., considering out of what desire, logic, fantasy, imagery, and so on, the shadow is composed. This blog is about naming the shadow.\n\nTo name the shadow successfully, I propose two stages:\n\n1. **Name the shadow as manifest in strangers.**\n\n2. **Name it in yourself.**\n\nI propose that this should happen in that right order, since there are possibly complications if focusing one’s eye upon oneself prematurely.\n\n### 1. Name the shadow as manifest in strangers.\n\nConsidering others first enables you to do some initial reconnaissance about the shadow, without encountering any personal obstacles such as implied obligations, fragility of ego or worldview, or over-familiarity with one’s own story. Considering others first means first adopting the role of a curious observationalist. Thereby, you can get some new ideas swirling about the mind and mixing with the unconscious without triggering a big, immediate immune response for which you are not yet ready.\n\nWhich 'others' should we look then to observe? Which ‘strangers’? The rule I propose is that one should observe those people whose stories one has found very compelling, very interesting, but also, who one would consider villainous. Naturally, the main source for such people is _characters in fiction_. So I suggest looking there first. Here’re some initial candidates:\n\n- Anakin Skywalker/Darth Vader (about him more later)\n- Hannibal Lecter\n- The Joker\n- Cersei Lannister\n- Tony Soprano\n- Michael Corleone\n- Loki\n\nIt may also do well to search history. You’re looking for people that you sympathise with in some way, that you at least want to watch and engage with, but who’re yet responsible for terrible things.\n\nYou take such a person, and _really try_ to understand their motives and to enter their perspective. Instead of settling for the meek “I just can't understand how anyone could do that”, assume that you can understand and try to. Seek to reveal the person’s reasons for acting terribly, even if those reasons be flawed.\n\n_My_ favourite example character for this purpose is, as listed above, Anakin Skywalker — specifically from Revenge of the Sith.[^1] Anakin did some very, very bad things in RotS. And below, I’ll offer some brief suggestions about his motives. You should really try to get a felt sense of these for your own examples. If you have a favourite villainous character from a movie, book, etc., try reviewing the material over and over again until you’re satisfied that you’ve captured the character’s mental state.\n\n[^1]: Star Wars is one of my [references](/blog/references).\n\nAnakin’s motives, from first person:\n\n- I fear loss.\n- I fear being alone.\n- I must feel true power.\n- I must be the most powerful.\n- I am curious about the extent of my power.\n- I must prove wrong those who have denied my power.\n- I must revenge upon those who have betrayed me.\n- I must radically simplify and purify (extinguishing the Jedi).\n- I must tie up all loose ends (extinguishing the Jedi).\n- I must create a new order so I can reinvent the rules in my own image (prepare my new Republic).\n- I am fatigued by moral anxiety. I wonder that I can choose to abandon it.\n- I must commit further to my dark path to improve my excuse that I can't turn back.\n- I must break free from the shackels of those who've held me back and have sought to control me.\n\n(Anakin has a such a potent and tragic story -- I love it!)\n\nOverall, this stage of stewing upon another’s, villainous motives should take you a long time. Pick a few characters, and consider them over the order of months. Various forms of imitation of and experimentation with a character should begin to seep into your imagination — and possibly into your life (although let that be at your own peril). And you should eventually be able to form an abstract model of their general psychology.\n\n### 2. Name it in yourself.\n\nAfter, stage two involves examining yourself.\n\nThis is more challenging. But you should be practiced, from stage one, at thinking about evil in general, and the process is essentially the same. You take the collection of the way you spend your time, the way you think, and the way you feel, and you consider it together as a kind of manifest character. That’s your story — you can imagine someone telling it from a fictional perspective. And then you try to uncover from that character his underlying motives.\n\nYou obviously want to focus more on areas of your story where it seems like your motives might be interesting/perverse. And while from my perspective almost anything will do, some areas will be more amenable than others and it's best to start with those. The privileged solution is to have a trusted therapist point these areas out for you. But assuming that you don’t have that, a good heuristic is to start by investigating events specifically where there’s been some kind of disagreement or tension between you and someone else. For example, consider arguments, fights, ghosting, break-ups, negative feedback, snide remarks, failed negotiations, bullying -- that kind of thing. These're often a good place to search for a monster, since others might've already suspected it of you, or you might've alreadly been willing to become it to revenge against the others. Complementarily, Jordan Peterson suggests you can focus on areas where you harbour resentment:[^2]\n\nJordan:\n> Well I found like I said earlier that one of the best ways in there [to your shadow] is resentment. You watch yourself like--\n\nRobert Greene:\n> How so?\n\nJordan: \n> Well because if you're-- if you're resentful, you know you're feeling like you're being victimized and mistreated, it's like ok, well you might-- maybe you are. Ok and you think there's no anger in that resentment so you're not looking hard enough -- if you watch your fantasies for example, if you're resentful and you watch the fantasies that flit through your imagination -- like you might not want to attend to them because they can be so brutal right but-- but that the fant-- because if someone is-- is oppressing you genuinely and you're not standing up for yourself then there'll be these compensatory fantasies. \n\n[^2]: Taken from a podcast with Robert Greene. Reference: \n*Channel Name:* Jordan B Peterson;\n*Channel Handle:* @JordanBPeterson;\n*Video Title:* How to Integrate Your Shadow Self | Robert Greene & Jordan Peterson;\n*Podcast:* The Dr. Jordan B. Peterson Podcast;\n*Website Orgin:* YouTube;\n*Publication Date:* Mar 22nd 2022;\n*Accessed on:* Nov 3rd 2023;\n*Timestamp:* 51:44;\n*URL:* https://www.youtube.com/watch?v=hgFX-ZsOscc&t=51m44s&ab_channel=JordanBPeterson\n\nRegardless, once you’ve found a monster, remember to study it's nature and to consider deeply what might explain it. In short: name your shadow. I advise doing this in as explicit and unforgiving a fashion as you can manage (assuming that you're ready), same as for a stage one character. Make sure that you're following a thought process through, honestly, writing it down, without wriggle room. Don't focus so much on critiquing anything as yet. Just try to make sure that you have uprooted the monster completely. \n \n### Summary\n\nNaming the shadow is important so that you can understand it. Once you understand an aspect of the shadow, it is exposed to interact with your ideas and creativity. You can see what mistakes or blindnesses it possesses, its inherent contradictions, how it can hijack a person, what wrongs it's responsible for, and also: how you can transmute it, evolve it, turn it into something valuable, learn from it, and *use* it. A previously hidden aspect of your psychology has come to bear its secrets. So, to what application? \n\nWith that question one heralds the beginning of a next process, beyond naming the shadow, which is *integrating* it, and which I may touch upon in later blogs.","timestamp":1698934238434,"lastEdited":1699017724227},{"title":"On Attack of the Clones","path":"attack-of-the-clones","tags":["culture"],"content":"I recently watched Star Wars: Attack of the Clones. Everybody shits on this movie because of (supposedly) Hayden Christensen's bad acting and the bad dialogue. I hadn't seen it at least for a few years so I wasn't sure what I'd think but I was initially sceptical of people's concerns. And it turns out I was right to be. (More on this example in a moment.)\n\nIt's typical that people get triggered by things like bad acting, cringe moments, or poor cgi in a film or show. And there're similar prejudices for books. But a lot of the time none of it really matters -- you can trade many details like that off. What should be important for most people, most of the time, when they're watching or reading fiction, is how compelling the overrarching story is and how compelling the characters are. That's the stuff that really has the chance to impact you and change your life. A lot of the time, poor cgi shouldn't really affect e.g. whether the thing is worth watching, whether it's worth a recommendation, what rating you would give it out of 10, and so on. Honestly, I'm not even sure how often people are really triggered by it. Probably some triggering is performative and some internalised. Some people are just trying to prove how smart, tasteful or knowledgeable they are, since they see through something others might be tempted to enjoy. These are the people so sensitive they could barely even suffer the thing -- wincing all the way through, didn't you know? On the other hand some folks are afraid that they'll be made to look a fool, by the reckoning of public opinion, for confessing their admiration for something non-foolish people know is plagued with errors and inadequacies. Well I say: all of that is nonsense! some gross socialisation process which generally stifles people's curiosity and life-force. \n\nConversely by the way, it's typical that people dote on things which are very polished, but deep down lack inspiration. This is the case for instance I think with Better Call Saul[^1], especially towards the end. BCS was always very clever, very tricky, and some people SAY that they think it's the best TV series of all time. But it made me feel a bit empty because I didn't really see what I was supposed to learn from it. (There're things you can mention but none apparently super interesting.) I felt that there was a lack of motive force driving the story forward -- like there were no convection concurrents beneath a pretty surface. That's a risk for a lot of spin-off shows and also for series that continue plodding on just because of e.g. money or tying up loose ends. \n\n[^1]: Sorry I know that this is outside of my [references](/blog/references). \n\nBack to the Attack of the Clones example, first of all, I liked it. Why? Because it was cool. Because Anakin's character is great, and because of the political intrigue. Second of all, I didn't even think Hayden Christensen's acting was very bad. And more importantly, if his acting was a lot better, it wouldn't have significantly altered my opinion of the movie. Third of all, yes, the dialogue was a bit clunky -- but again I didn't care. I thought in fact that the clunkiness was charming, funny, and interesting. Attack of the Clones is a good example here because it has just become one of those movies that some people have decided you're not allowed to like. \n\nAn example of a movie you *are* allowed to like (as far as I can tell) is one of the Harry Potter movies. One thing which in another context might trigger people about those movies is the poor cgi of the quidditch games. But again, if you're focused on that, if that makes you indignant -- you're not thinking straight. The right approach to a slimy pixelated Harry-on-a-broom is a hearty laugh. What's generally actually important about the quidditch games is stuff like the absolutely epic symbolism which Jordan Peterson explains [here](https://www.youtube.com/watch?v=11oBFCNeTAs&t=30m&ab_channel=JordanBPeterson).[^2] (JP is a genius for explaining that by the way and JK Rowling a visionary for coming up with it.)\n\n[^2]: Taken from one of his lectures. Reference: \n*Channel Name:* Jordan B Peterson;\n*Channel Handle:* @JordanBPeterson;\n*Video Title:* 2017 Personality 12: Heidegger, Binswanger, Boss (Phenomenology);\n*Website Orgin:* YouTube;\n*Publication Date:* Feb 21st 2017;\n*Accessed on:* Nov 4th 2023;\n*Timestamp:* 30:00;\n*URL:* https://www.youtube.com/watch?v=11oBFCNeTAs&t=30m&ab_channel=JordanBPeterson\n\n\nFrom a more fundamental perspective, a good movie is a choice of referent for a set of interesting ideas. But because the movie medium is so rich, it is always an incredibly redundant referent. My claim is that people (act like they) don’t realise *how* redundant it is. It's true that sometimes precision will be needed in factors like acting, visuals, dialogue, etc., in order to make the reference successful, e.g. there’s a subtle emotion that the actor needs to convey in his expression. And it's useful that we have access to those factors by courtesy of the medium. But a lot of the time the factors can vary quite significantly without compromising the reference at all.\n\nAnyway that's my piece. ","timestamp":1699112093050,"lastEdited":1699137902348},{"title":"Leadership","path":"leadership","tags":["psychology","sociology"],"content":"In a group of people with common cause, the **leader** of the group has four key responsibilities:\n\n1. **He models the advancement of the cause.** \n\nThe leader's actions make it seem like advancing the cause is real, possible, and imitable. \n\n*A good leader* is therefore an exceptional contributor to the cause. E.g. all Rick Grimes has done to help his group survive.[^1]\n\n[^1]: The Walking Dead seasons 1-6 is one of my [references](/blog/references).\n\n2. **He reminds people of the righteousness of the cause.** \n\nThe leader's words, arguments, decisions, etc., make the cause seem compelling. \n\n*A good leader* is therefore articulate and has an organised mind. E.g. Rick's speech to the Govenor (\"We're not too far gone.\"), his speech around the fire in the barn during the storm (\"We tell ourselves that we are [...]\"), etc.\n\n3. **He organises people.**\n\nThe leader helps group members find their roles and incorporates them into a broader vision.\n\n*A good leader* is therefore a good psychologist. E.g. Rick uses Hershel for council, Glenn for scavenging, Daryl for tracking, Maggie for diplomacy, Carol for covert operations, etc., all based on their strengths.\n\n4. **He makes group decisions.**\n\nThe leader assumes some ability to make decisions on behalf of the group, and to speak for them, as an adequate representative of their cause. \n\n*A good leader* therefore has a deep understanding of the cause, and also is a good listener so that he can account for various of the group's perspectives on it. E.g. Rick is intially ruthlessly sceptical of the Alexandrians -- this judged, correctly, as necessary for the group's survival -- but he also heeds Michone's and Glenn's council (especially as evidence accumulates of the Alexandrians' good faith) and he starts to change his tune a bit.\n\n\n","timestamp":1698755236334,"lastEdited":1699224429655},{"title":"The Norm Enforcer","path":"the-norm-enforcer","tags":["psychology"],"content":"The **norm enforcer** or the **n-forcer** is someone who tries to eliminate weird people. The norm enforcer interferes with what is justly a weird person’s business in order to return them to a norm. He does this because the weird person is seen as a threat to his worldview.\n\n### Background\n\nThe worldview of a norm enforcer was inherited, passed down from a segment of his culture. He has stuck faithful to that worldview throughout his life. He has stuck so faithful in fact, that over time he has had to ward off many inner conflicts about it. Those conflicts were *buried* in hard-to-notice places of his mind. \n\nWhile the n-forcer's worldview stays flourishing, the conflicts can stay buried. In particular, the n-forcer's worldview can act a shield, sparing him from negative emotion. Therefore, the n-forcer is motivated to keep his worldview flourishing. Therefore, he undertakes forms of motivated maintainence on it.\n\nCritically, the n-forcer undertakes to make it seem like his worldview *is the only possible worldview*. The actions taken in his life, the decisions made: they were the only actions that *could’ve* been taken, the only decisions that *could’ve* been made. And that means that any life set out by a different code -- that is, as threatened by the weird -- cannot be possible. It must inevitably fail. So the norm enforcer becomes himself the regulating entity. He must make the weird life fail. \n\n### The Paradox\n\nSo that's why the norm enforcer seeks to eliminate weird people. Yet at the same time as he seeks to eliminate them, he simultaneously *needs* them. He *needs* the idea of a deviant. Why?\n\n- He needs it because, for one, suppressing the deviant is a promise of a moral quest. That gives the n-forcer something to do, with motivational power, and into which he can channel his anger. And that anger can be encompassing, and exclusionary. And so it can shroud out his conflicts about his worldview -- it can relieve deep feelings of dissatisfaction, guilt, uncertainty, boredom, and so on.\n\n- For two, the deviant is a source of gossip. The deviant is an excuse to discuss with other n-forcers the n-forcing way. And gossip is useful because it provides an opportunity for validation. After all, consider that the n-forcer does not really trust his own mind. Secretly, he is aware of his array of self-deceptions. So to the extent that he judges the Other more immune to those deceptions, he feels that his worldview is more secured by their alternative process of reason. Or to the extent that he finds another victim of those deceptions, that’s fine too because it means at least that there’s shared guilt, and thus mitigating the n-forcer’s feeling of personal blameworthiness.\n\n- For three, much as it may be attempted to be denied, weird people are interesting to the n-forcer. Anomalies are interesting. The n-forcer will be drawn in to discover the explanation for the anomaly (even if approaching in the protective guard of ideology). Relatedly, there is also the suggestion that the deviant may have enough strange knowledge to redeem; that the deviant will be able to cure the n-forcer; that the deviant will fight back, and will be able to reconcile the n-forcer’s psychology and to make him see God again. Also, there is the suggestion that the deviant is the only one with the capacity to offer the n-forcer true forgiveness. ","timestamp":1699276318894,"lastEdited":1699294132081},{"title":"Am I Special?","path":"am-i-special","tags":["psychology"],"content":"My whole life I've held onto the idea that, somewhow, I'm special. \n\nInitially when I was a child, my specialness was supernatural. I remember thinking that I could do impossible things just by intending to do them -- just because I wanted them really hard -- and, y'know, that everything else would happen automatically. Hehehe. At that time, coming into my own consciousness was surprising and magical to me and I made sense of it as a source of unique power. \n\nAs an older child, I thought that my specialness was about my popularity. I remember at primary school how important I thought it was that my classmates elect me to the school council. That meant that they thought me especially likeable, which is basically how those things were decided back in the old days. I probably still held on to some of the supernatural stuff a bit, but now I also had this new source of specialness to enjoy. \n\nAnother related thing I thought about as an older child was how cool I was. Towards the end of primary school I started looking into having cool hair and cool clothes and cool shoes. I was calculating my actions based on their coolness. So maybe I thought that I was special because I had a unique taste and ability to be cool. Which made me popular and sort of main-character-y.\n\nMoving into my early teen years, things became more about how handsome I was. People started commenting about it and, all of a sudden, it became super prominent in my psychology. I started to notice my face more in the mirror as it became an affordance and something about which normative judgements were made -- as it became a new source of specialness. \n\nThen into my later teen years I got unhandsomed a bit and, as well as due to other factors, now my specialness transitioned more into cleverness and knowledge. I started watching people saying fancy stuff on YouTube and I started reading fancy books. Now, part of me had genuinely *just found out* that there was a rigid order to the world and that I could use it to feed my curiosity and learn new things. And that was intrinsically exciting. But my cleverness also became an identity, tied up in a social idea that I had to *appear* clever. Which somewhat corrupted the matter. \n\nOver time, into early adulthood, my pursuit of being more cleverer and more knowledgable became more pure, especially as I isolated myself and learned to introspect. (Wow that's *so* interesting if you think about it!!!)\n\nBUT it's only until VERY RECENTLY (still early adulthood) that I realised that, God damn it, I'm still trying to protect this idea about myself, this specialness. This: I'm smart. I'm so smart and so quick. I learn fast. I'm so creative. I see through this and that. It's like bloody hell! And that's what it is by the way, it's a trait that I feel that I need to *protect*, to defend, to hold close. It totally warps my psychology. It causes me to act up. I fail to evaluate things against the standard of, like, what God would want for me, or what is the truest, realest thing that I can do. \n\nUhhhh. It's all been such a heavy weight upon me. All these years. But it's also very scary to go without. It's exposing. I feel strange without my specialness. I have returned to simply being surprised by my own consciousness. It's like all that time of ego and comparison and grandeur -- I was just running on the spot. And as I come to a stand still and everything goes quiet, I look around and I realise I'm still here. I'm still just here. ","timestamp":1699493207055,"lastEdited":1699557719468},{"title":"Stress is Bad!","path":"stress-is-bad","tags":[],"content":"*Disclaimer: I am* REALLY *not an expert here. I am gathering some very brief, casual speculations which I can only hope inspires someone else to do the serious work.*\n\nHeadline: I think that **stress** is a **Big Bad** of human chronic health. \n\nIt keeps appearing as a unifying factor behind a bunch of stuff on my radar. Here're some examples of where it shows up:\n\n- *Diet.* In my naive opinion the Ray Peat/animal-based diets, both significantly different from standard Western diets, are the most-plausibly most healthy diets AND I think both help to reduce stress e.g. the former is explicit about this. \n\n- *Breathing.* I speculate that shallow and/or 'neck' breathing may be downstream AND upstream of stress, and that it can lead to problems including but not limited to: \n\n- *Bad posture.* I have followed and have had RIDICULOUS success[^1] with PRI (Postural Restoration Institute) techniques for fixing my posture and that's largely about being chill in left stance. I speculate that having a posture patterned to right dominance (e.g. left AIC) is either in part or sometimes downstream of stress.\n\n- *Exercise.* Overexcersing is upstream of stress. The Ray Peat community talk about this. But it's been on my radar from various other sources too. \n\n[^1]: Possibly unprecendented success -- definitelty completely undeniable and shocking -- which I'll talk about more another time.\n\nMy point is that if the goal is improving one's health, focusing more on stress -- its causes, consequences, how to eliminate it -- could be extremely high-leverage. \n\nI recently blogged about the [psychology of stress](/blog/psychology-of-stress). I think that a lot of people have an 'unsustainable' strategy for responding to psychologically-induced stress (see blog for terminology). So one intervention is to look into that stuff. (Though note that that might not be the intervention you need, or only one among very many.)","timestamp":1699723914110},{"title":"Cognition & Focus","path":"cognition-and-focus","tags":["psychology"],"content":"Herein I present a brief, high-level, speculative model of cognition in which central is the notion of focus and 'focus channels'. \n\n### How thoughts come into focus\n\nThoughts, sourced from the subconscious, come into focus via *channels*. These channels are dynamic and more or less persistent. They are maintained, torn down, and raised up, corresponding to goals/desires/needs you have. A channel is a piece of software. A channel only allows the kinds of thoughts into focus that, according to its software, advance some set of goals. You can think of focus channels as analogous to ion channels which only allow ions with a certain size, charge, etc.into a cell. \n\nA channel can be open or closed. You wouldn't want to tear down a useful channel, so when it's not accepting any thoughts, you can think of it as closed. For example, many sensation channels persist and are typically open, but they can close when you're very angry or adrenaline-rushed. Most channels are closed most of the time. At a given time, the human mind can withstand having only-so-many channels open. \n\nGenerically, when more channels are open (or when the channels are more permissive), you're being open-minded. When more channels are closed, you're being close-minded. \n\nWhen a channel opens, it sends out attractive signals. Those signals attract thoughts which satisfy some plausibility criterion, which means that the channel plausibly admits them into focus. \n\n### What happens after a thought enters focus\n\nAfter a thought has entered focus, it passes through three key pieces of software:\n\n1. **The Copying Module** \n\nThe Copying Module makes various copies/slight copies of the thought (with small changes) and sends them back into the subconscious. It is the analogue of the mutation mechanism in genetic evolution. The Copying Module is the origin of all new thought.\n\nOnce there are more copies of a thought -- or more of the thoughts components, its 'genes' -- generically, all else held constant, the thought -- its genes -- is more likely to enter focus, because more copies are available to pass through an accepting channel. Notice that this creates an evolutionary landscape where thoughts 'want' to enter focus.[^1]\n\n[^1]: The general notion that ideas in the mind undergo some literal form of evolution is not original to me. Philosopher Elliot Temple has variouly alluded to this.  \n\n2. **The Behaviour Module**\n\nThe Behaviour Module decides, with an input of the present thought, whether and which behaviour should result. Note that this doesn't have to be physical behaviour. It can be e.g. the running of a bit of a software for calculating a sum. \n\n3. **The Updater Module** \n\nThe Updater Module decides, again with an input of the present thought, whether and how to update the focus channels and/or the Copying Module and/or the Behaviour Module AND/or itself. For example:\n\n- It decides which channels to open, close, create, banish or modify.\n- It modifies the mechanism of variation in the Copying Module.\n- It modifies the morality of the Behaviour Module.\n- It decides whether it is adequate to its own goals/needs new goals. \n\nAnd so on. \n\n### Summary Diagram\n\nThe picture comes together like this:\n\n![Model of focus and cognition](/blogs/images/focus.png)\n\n### Successful thoughts\n\nWhat is a 'successful' thought? Generally, successful thoughts cause The Updater Module to change the focus channels in such a way that the thought is (its genes are), at some later point downstream, more likely to be attracted to and accepted by a focus channel (and so more likely to replicate in The Copying Module and so on). Thoughts can be more or less adapted to the focus channels, but they can also be more or less adapted to this process of updating the channels. \n\n### Examples\n\nHere are a few scattered phenomena in the language of the model thusfar-presented:\n\n- Intrusive thoughts happen when there is a bug with your Updater Module and you lose control of open channels. The Module doesn't seem to be working sensibly to you. \n- Dreams are strange because focus channels are open which wouldn't usually be. Also, the Updater Module is more permissive about associations. (Associations have to do with which channel(s) the Updater Module opens based on the present thought in order to get the next one.)\n- Consciousness is coincident with focus. Something is in focus if and only if you are conscious of it. \n- Psychologically-induced stress happens when a focus channel has been neglected, and the needs it's supposed to be servicing aren't being serviced, AND where the judged-as appropriate response to this circumstance is that the body be used as an intermediary to make you feel bad. (See my blog on the [psychology of stress](/blog/psychology-of-stress) for more.)\n\n### How to program a mind\n\nYou'll need to boostrap a few things in order to program this model of cognition and to have it run in an interesting way. You'll need some initial thoughts and channels. You can have the thoughts initially be in binary, say, and then in principle the Copying Module should be able transform them into any kind of broader information medium (images, intuitions, noises, emotions, etc.) You'll also need an initial mechanism of variation for the Copying Module. You'll also need some initial rule for the Behaviour Module (e.g. you could probably start with just 'save to memory'). You'll also need to ... do whatever you need to do to bootstrap the Updater Module. That is the trickiest bit. I imagine it will have to be fairly sophisticated from the outset in order for the mind to properly take flight. ","timestamp":1700168042305,"lastEdited":1700389059063},{"title":"Focus & The One Big Thing","path":"focus-and-big-thing","tags":["psychology"],"content":"i can’t do two things at once. i’m stupid. i can only have one big thing in my life at one time — one big thing that requires thinking. if there’s two (or more) big things, i get stressed, lash out, bail, look for another path where i can do one thing. why? when i have a big thing, it takes up all the space. i only know how to have an _incredibly involved_ relationship with the big thing. it becomes my life. and the prospect of me not being singularly dedicated to the One Big Thing, of having to divide my attention — I _hate_ that. I feel: THERE MUST ONLY BE ONE THING. I can’t commit weakly to a thing. why? it causes me stress when I keep getting thinking about all the ways I could’ve done thing A bigger, better, differenter — while I’m supposed to be thinking bout thing B. and really I can’t control those thoughts. why? i’m not sure. honestly maybe i just need to practice controlling them better — i.e. to pass through an adaptive valley and start doing more of some multiple big things.\n\nhmm it’s kind of like this maybe: when I do a big thing, it fills up my subconscious with ideas about it. and REALLY SO. why? because generally when i am focused on something, i’m really focused on it without many tangential utilitarian motives like e.g. compliance with my social role; and translating into my [model of focus](/blog/cognition-and-focus), that means that the focus channels related to the big thing are free of lots of restrictions; and that means that a lot of ideas related to the big thing get into focus; and then when a thought gets into focus according to my model, variants of it get made in the copying module and get sent back out into the subconscious. so, when I’m allowing myself to have a lot of thoughts about the big thing, I’m sending back out into the subconscious lots of other thoughts, likely still about the big thing. And my subconscious is not like to be emptied of thoughts about thing A just because I decide: “ok, this now is the last thought about thing A”. So THEN what happens is that, when I transition into thinking about big thing B — and there are multiple ways of explaining this, but here’s one way where my model still functions and which hopefully is appropriately equivalent to some other way — I have a focus channel which is generically receptive to ideas (a kind of catch-all which you can imagine naively lets an idea into focus based on a timer) and in spite of my desire to think about thing B it keeps letting into focus ideas about the big thing A because they’re all leftover and dominating in the subconscious! And more, that’s not it because my updater module is then plausibly like “Ah, time for associations!” and the big thing A channels start to open and suddenly I’m thinking all about thing A. But I’m sposed t be thinkin bout thing B … So THEN I get an idea that I’m ignoring thing B and that causes … [stress](/blog/psychology-of-stress). Or still, I get an idea that I’m neglecting the fact that this whole thing is a mess and that I’m caught in a _cycle_ of neglecting thing B. Or maybe, since after thing A starts playing up again I’m all like “No I have to think about thing B” and I close the thing A channels, something about the nevertheless-continued presence of thing A ideas in the subconscious means that I get an idea that I’m neglecting thing A, also which causes stress. (Well it doesn’t _necessarily_ cause stress but I do not have sufficient practice and intuitive mastery of an ‘in strategy’ for these neglect ideas to not cause some amount of stress generally speaking (I link again to the psychology of stress [blog](/blog/psychology-of-stress)).)\n\nby the way, what is a natural way to check that something is being ignored/neglected in my model?—i’ve said before that it’s like a focus channel is being neglected, and which channel services a need.\n\nagain there are different ways of explaining this. NOTE that my general goal with the model of focus/cognition is to:\n\n- represent in a relatable way how the mind actually works, where there is some accurate correspondence, but then also\n- to attend to some implementation details of the model in a way which is not necessarily constrained by phenomenology, where correspondence relationships may break, but which remains easily programmable, natural, and where there is some kind of equivalence of function in that a human-like mind still results.\n\nso one example explanation in this case for recognising neglect is that we add a feature to the model where closed channels still receive and process ideas, and if there is a threshold number of ‘success’ incidents, since a channel’s been closed, where an idea _would_ pass into focus _but for_ the channel being closed, then the channel has the ability to fire an idea into the subconscious that says it’s being neglected.\n\ni like the notion that closed channels still ambiently receive and process ideas as that feels pretty natural to me (and by the way that all happens outside of focus in an automated fashion so is unconscious). if true that might have some useful implications.\n\nby the way again, note that i do think that the focus model i’ve applied here still has big problems, especially re the *un*naturalness/vagueness of the “behaviour module” and “updater module”. there’re some promising signs of coherence and explanatory power (e.g. I wrote this blog in a completely associative manner starting from the first sentence and I didn’t plan to involve the model at all but it has nonetheless proved useful). but there’s also a lot of room for maturation. the model is still in a development/early prototype phase. generally, ultimately, there is wanting of the property that the model HAS to be the way it is. that it’s in its proper form.\n","timestamp":1701041822458}],"metadata":{"images":{"focus.png":{"featuredIn":["Cognition & Focus"]}}}}